// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ReportsProcatt.ModelDB
{
    public partial class CachedbContext : DbContext
    {
        public CachedbContext()
        {
        }

        public CachedbContext(DbContextOptions<CachedbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<VAssetsContracts> VAssetsContracts { get; set; }
        public virtual DbSet<VDividendsAndCouponsHistory> VDividendsAndCouponsHistory { get; set; }
        public virtual DbSet<VFundHistory> VFundHistory { get; set; }
        public virtual DbSet<VFundStructure> VFundStructure { get; set; }
        public virtual DbSet<VInvestorFundDate> VInvestorFundDate { get; set; }
        public virtual DbSet<VOperationsHistoryContracts> VOperationsHistoryContracts { get; set; }
        public virtual DbSet<VPortFolioDaily> VPortFolioDaily { get; set; }
        public virtual DbSet<VPositionKeeping> VPositionKeeping { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<VAssetsContracts>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAssets_Contracts");

                entity.Property(e => e.DailyDecrementEuro)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("DailyDecrement_EURO");

                entity.Property(e => e.DailyDecrementRur)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("DailyDecrement_RUR");

                entity.Property(e => e.DailyDecrementUsd)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("DailyDecrement_USD");

                entity.Property(e => e.DailyIncrementEuro)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("DailyIncrement_EURO");

                entity.Property(e => e.DailyIncrementRur)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("DailyIncrement_RUR");

                entity.Property(e => e.DailyIncrementUsd)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("DailyIncrement_USD");

                entity.Property(e => e.Date).HasColumnType("date");

                entity.Property(e => e.Eurorate)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("EURORATE");

                entity.Property(e => e.InputCouponsEuro)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("INPUT_COUPONS_EURO");

                entity.Property(e => e.InputCouponsRur)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("INPUT_COUPONS_RUR");

                entity.Property(e => e.InputCouponsUsd)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("INPUT_COUPONS_USD");

                entity.Property(e => e.InputDividentsEuro)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("INPUT_DIVIDENTS_EURO");

                entity.Property(e => e.InputDividentsRur)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("INPUT_DIVIDENTS_RUR");

                entity.Property(e => e.InputDividentsUsd)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("INPUT_DIVIDENTS_USD");

                entity.Property(e => e.InputValueEuro)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("INPUT_VALUE_EURO");

                entity.Property(e => e.InputValueRur)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("INPUT_VALUE_RUR");

                entity.Property(e => e.InputValueUsd)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("INPUT_VALUE_USD");

                entity.Property(e => e.OutputValueEuro)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("OUTPUT_VALUE_EURO");

                entity.Property(e => e.OutputValueRur)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("OUTPUT_VALUE_RUR");

                entity.Property(e => e.OutputValueUsd)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("OUTPUT_VALUE_USD");

                entity.Property(e => e.Usdrate)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("USDRATE");

                entity.Property(e => e.ValueEuro)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("VALUE_EURO");

                entity.Property(e => e.ValueRur)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("VALUE_RUR");

                entity.Property(e => e.ValueUsd)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("VALUE_USD");
            });

            modelBuilder.Entity<VDividendsAndCouponsHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDIVIDENDS_AND_COUPONS_History");

                entity.Property(e => e.AmountPayments).HasColumnType("numeric(38, 10)");

                entity.Property(e => e.AmountPaymentsEuro)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("AmountPayments_EURO");

                entity.Property(e => e.AmountPaymentsRur)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("AmountPayments_RUR");

                entity.Property(e => e.AmountPaymentsUsd)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("AmountPayments_USD");

                entity.Property(e => e.Eurorate)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("EURORATE");

                entity.Property(e => e.PaymentDateTime).HasColumnType("datetime");

                entity.Property(e => e.ShareName).HasMaxLength(300);

                entity.Property(e => e.Type).HasColumnName("TYPE_");

                entity.Property(e => e.Type1).HasColumnName("Type");

                entity.Property(e => e.Usdrate)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("USDRATE");

                entity.Property(e => e.Wiring).HasColumnName("WIRING");
            });

            modelBuilder.Entity<VFundHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vFundHistory");

                entity.Property(e => e.Amount).HasColumnType("numeric(30, 10)");

                entity.Property(e => e.FeeRur)
                    .HasColumnType("numeric(30, 10)")
                    .HasColumnName("Fee_RUR");

                entity.Property(e => e.OrderNum)
                    .HasMaxLength(200)
                    .HasColumnName("Order_NUM");

                entity.Property(e => e.RateRur)
                    .HasColumnType("numeric(30, 10)")
                    .HasColumnName("RATE_RUR");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.ValueRur)
                    .HasColumnType("numeric(30, 10)")
                    .HasColumnName("VALUE_RUR");

                entity.Property(e => e.WDate)
                    .HasColumnType("datetime")
                    .HasColumnName("W_Date");

                entity.Property(e => e.WId).HasColumnName("W_ID");

                entity.Property(e => e.Walk).HasColumnName("WALK");
            });

            modelBuilder.Entity<VFundStructure>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vFundStructure");

                entity.Property(e => e.Amount)
                    .HasColumnType("numeric(28, 10)")
                    .HasColumnName("AMOUNT");

                entity.Property(e => e.BalAcc).HasColumnName("BAL_ACC");

                entity.Property(e => e.BalDelta)
                    .HasColumnType("numeric(28, 10)")
                    .HasColumnName("Bal_Delta");

                entity.Property(e => e.BalSummaRur)
                    .HasColumnType("numeric(28, 10)")
                    .HasColumnName("BAL_SUMMA_RUR");

                entity.Property(e => e.Class).HasColumnName("CLASS");

                entity.Property(e => e.ContractId).HasColumnName("Contract_Id");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.InvestmentId).HasColumnName("Investment_id");

                entity.Property(e => e.InvestorId).HasColumnName("Investor_Id");

                entity.Property(e => e.NomPrice)
                    .HasColumnType("numeric(28, 10)")
                    .HasColumnName("Nom_Price");

                entity.Property(e => e.Nominal)
                    .HasColumnType("numeric(28, 10)")
                    .HasColumnName("NOMINAL");

                entity.Property(e => e.PortfolioDate).HasColumnType("date");

                entity.Property(e => e.Rate)
                    .HasColumnType("numeric(28, 10)")
                    .HasColumnName("RATE");

                entity.Property(e => e.RateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RATE_DATE");

                entity.Property(e => e.RurPrice)
                    .HasColumnType("numeric(28, 10)")
                    .HasColumnName("RUR_PRICE");

                entity.Property(e => e.ValueId).HasColumnName("VALUE_ID");

                entity.Property(e => e.ValueNom)
                    .HasColumnType("numeric(28, 10)")
                    .HasColumnName("VALUE_NOM");

                entity.Property(e => e.ValueRur)
                    .HasColumnType("numeric(28, 10)")
                    .HasColumnName("VALUE_RUR");
            });

            modelBuilder.Entity<VInvestorFundDate>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vInvestorFundDate");

                entity.Property(e => e.AmountDay).HasColumnType("numeric(38, 10)");

                entity.Property(e => e.AmountDayMinus).HasColumnType("numeric(38, 10)");

                entity.Property(e => e.AmountDayMinusEvro)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("AmountDayMinus_EVRO");

                entity.Property(e => e.AmountDayMinusRur)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("AmountDayMinus_RUR");

                entity.Property(e => e.AmountDayMinusUsd)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("AmountDayMinus_USD");

                entity.Property(e => e.AmountDayPlus).HasColumnType("numeric(38, 10)");

                entity.Property(e => e.AmountDayPlusEvro)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("AmountDayPlus_EVRO");

                entity.Property(e => e.AmountDayPlusRur)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("AmountDayPlus_RUR");

                entity.Property(e => e.AmountDayPlusUsd)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("AmountDayPlus_USD");

                entity.Property(e => e.Date).HasColumnType("date");

                entity.Property(e => e.Evrorate)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("EVRORATE");

                entity.Property(e => e.LsNum)
                    .HasMaxLength(120)
                    .HasColumnName("LS_NUM");

                entity.Property(e => e.Rate)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("RATE");

                entity.Property(e => e.SumAmount).HasColumnType("numeric(38, 10)");

                entity.Property(e => e.Usdrate)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("USDRATE");

                entity.Property(e => e.ValueEvro)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("VALUE_EVRO");

                entity.Property(e => e.ValueRur)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("VALUE_RUR");

                entity.Property(e => e.ValueUsd)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("VALUE_USD");
            });

            modelBuilder.Entity<VOperationsHistoryContracts>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vOperations_History_Contracts");

                entity.Property(e => e.Amount).HasColumnType("numeric(38, 7)");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Fee).HasColumnType("numeric(38, 7)");

                entity.Property(e => e.Investment).HasMaxLength(300);

                entity.Property(e => e.Isin)
                    .HasMaxLength(50)
                    .HasColumnName("ISIN");

                entity.Property(e => e.Price).HasColumnType("numeric(38, 7)");

                entity.Property(e => e.TName)
                    .HasMaxLength(300)
                    .HasColumnName("T_Name");

                entity.Property(e => e.ValueNom)
                    .HasColumnType("numeric(38, 7)")
                    .HasColumnName("Value_Nom");
            });

            modelBuilder.Entity<VPortFolioDaily>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vPortFolio_Daily");

                entity.Property(e => e.Amount)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("AMOUNT");

                entity.Property(e => e.BalAcc).HasColumnName("BAL_ACC");

                entity.Property(e => e.BalSumma)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("BAL_SUMMA");

                entity.Property(e => e.Class).HasColumnName("CLASS");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurName)
                    .HasMaxLength(200)
                    .HasColumnName("CUR_NAME");

                entity.Property(e => e.NomPrice)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("Nom_Price");

                entity.Property(e => e.Nominal)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("NOMINAL");

                entity.Property(e => e.PortfolioDate).HasColumnType("date");

                entity.Property(e => e.Rate)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("RATE");

                entity.Property(e => e.RateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RATE_DATE");

                entity.Property(e => e.RurPrice)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("RUR_PRICE");

                entity.Property(e => e.SBalSummaRur)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("S_BAL_SUMMA_RUR");

                entity.Property(e => e.ValueId).HasColumnName("VALUE_ID");

                entity.Property(e => e.ValueNom)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("VALUE_NOM");

                entity.Property(e => e.ValueRur)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("VALUE_RUR");
            });

            modelBuilder.Entity<VPositionKeeping>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vPOSITION_KEEPING");

                entity.Property(e => e.Amortizations).HasColumnType("decimal(20, 7)");

                entity.Property(e => e.Amount).HasColumnType("decimal(20, 7)");

                entity.Property(e => e.Coupons).HasColumnType("decimal(20, 7)");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.Dividends).HasColumnType("decimal(20, 7)");

                entity.Property(e => e.FifoDate)
                    .HasColumnType("date")
                    .HasColumnName("Fifo_Date");

                entity.Property(e => e.IcNameId).HasColumnName("Ic_NameId");

                entity.Property(e => e.IlNum).HasColumnName("Il_Num");

                entity.Property(e => e.InComm)
                    .HasColumnType("decimal(20, 7)")
                    .HasColumnName("In_Comm");

                entity.Property(e => e.InDate)
                    .HasColumnType("date")
                    .HasColumnName("In_Date");

                entity.Property(e => e.InDol).HasColumnName("In_Dol");

                entity.Property(e => e.InEq)
                    .HasColumnType("decimal(20, 7)")
                    .HasColumnName("In_Eq");

                entity.Property(e => e.InPrice)
                    .HasColumnType("decimal(20, 7)")
                    .HasColumnName("In_Price");

                entity.Property(e => e.InPriceEq)
                    .HasColumnType("decimal(20, 7)")
                    .HasColumnName("In_Price_eq");

                entity.Property(e => e.InPriceUkd)
                    .HasColumnType("decimal(20, 7)")
                    .HasColumnName("IN_PRICE_UKD");

                entity.Property(e => e.InSumma)
                    .HasColumnType("decimal(20, 7)")
                    .HasColumnName("In_Summa");

                entity.Property(e => e.InWir).HasColumnName("In_Wir");

                entity.Property(e => e.IrTrans)
                    .HasMaxLength(300)
                    .HasColumnName("Ir_Trans");

                entity.Property(e => e.Isin)
                    .HasMaxLength(12)
                    .HasColumnName("ISIN");

                entity.Property(e => e.Nkd)
                    .HasColumnType("decimal(20, 7)")
                    .HasColumnName("NKD");

                entity.Property(e => e.ObligDateEnd)
                    .HasColumnType("date")
                    .HasColumnName("Oblig_Date_end");

                entity.Property(e => e.OcNameId).HasColumnName("Oc_NameId");

                entity.Property(e => e.OdId).HasColumnName("Od_Id");

                entity.Property(e => e.OfertaDate)
                    .HasColumnType("date")
                    .HasColumnName("Oferta_Date");

                entity.Property(e => e.OfertaType)
                    .HasMaxLength(300)
                    .HasColumnName("Oferta_Type");

                entity.Property(e => e.OlNum).HasColumnName("Ol_Num");

                entity.Property(e => e.OutDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Out_Date");

                entity.Property(e => e.OutDol).HasColumnName("Out_Dol");

                entity.Property(e => e.OutEq)
                    .HasColumnType("decimal(20, 7)")
                    .HasColumnName("Out_Eq");

                entity.Property(e => e.OutPrice).HasColumnType("decimal(20, 7)");

                entity.Property(e => e.OutSumma)
                    .HasColumnType("decimal(20, 7)")
                    .HasColumnName("Out_Summa");

                entity.Property(e => e.OutWir).HasColumnName("Out_Wir");

                entity.Property(e => e.TodayPrice)
                    .HasColumnType("decimal(20, 7)")
                    .HasColumnName("Today_PRICE");

                entity.Property(e => e.Ukd)
                    .HasColumnType("decimal(20, 7)")
                    .HasColumnName("UKD");

                entity.Property(e => e.ValueNom)
                    .HasColumnType("decimal(20, 7)")
                    .HasColumnName("Value_NOM");
            });

            modelBuilder.HasSequence<int>("ApplCycle")
                .StartsAt(500)
                .HasMin(500)
                .HasMax(2100000000)
                .IsCyclic();

            OnModelCreatingGeneratedFunctions(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}